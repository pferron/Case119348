{
  "name": "cassini-backend",
  "version": "1.0.0",
  "private": true,
  "description": "",
  "repository": {
    "type": "git",
    "url": "https://git.target.com/CFC/Cassini.git"
  },
  "license": "ISC",
  "author": "CFC",
  "type": "commonjs",
  "main": "./dist/app",
  "scripts": {
    "build": "tsc -b && cp -a ./src/views/. ./dist/views",
    "dev": "concurrently --raw 'npm run backend' 'npm run frontend'",
    "jobs": "TS_NODE_FILES=true nodemon --inspect=9234 -r ts-node/register ./src/jobs/server.ts",
    "dev+jobs": "concurrently --raw 'npm run dev' 'npm run jobs'",
    "backend": "nodemon --inspect -r ts-node/register ./src/app.ts",
    "frontend": "NODE_ENV=development BACKEND_URL=https://localhost:3000 npm run serve --prefix ../frontend",
    "start-prod": "yarn migrate && tsc -b && yarn migrate:es && node ./dist/app.js",
    "docker": "docker-compose down && docker-compose rm -f && docker volume prune -f && docker-compose up -d",
    "docker:arm64": "docker-compose down && docker-compose rm -f && docker volume prune -f && docker-compose -f ../docker-compose-arm64.yml up -d",
    "quicktest": "yarn quicktest:match",
    "quicktest:match": "NODE_ENV=test jest --maxWorkers=1 --config=jest.quicktest.config.ts --forceExit",
    "test:all": "NODE_ENV=test yarn jest --selectProjects all --maxWorkers=50% --forceExit",
    "test:integration": "NODE_ENV=test yarn jest --selectProjects integration --runInBand --forceExit",
    "test": "yarn test:all && yarn db:truncate && yarn test:integration",
    "test:mocha": "NODE_ENV=test TS_NODE_FILES=true bash -c 'yarn db:reset && mocha --require ts-node/register src/test/*.ts --exit'",
    "test:jest": "yarn test:jest:match .*",
    "test:jest:s": "yarn test:jest:match:s .*",
    "test:jest:match": "NODE_ENV=test bash -c 'yarn db:reset && yarn es:reset && jest --maxWorkers=50% --forceExit --collectCoverageFrom=**/src/**/${0}* ${0}'",
    "test:jest:match:s": "NODE_ENV=test SKIP_GLOBAL_SETUP=true bash -c 'jest --maxWorkers=50% --forceExit --collectCoverageFrom=**/src/**/${0}* ${0}'",
    "test:jest:debug": "yarn test:jest:debug:match .*",
    "test:jest:debug:match": "NODE_ENV=test bash -c 'yarn db:reset && node --inspect-brk ./node_modules/jest/bin/jest.js --runInBand --forceExit ${0}'",
    "test:target": "NODE_ENV=test TS_NODE_FILES=true mocha --require ts-node/register --exit",
    "test:clean": "NODE_ENV=test bash -c 'jest --cleanCache'",
    "lint:dev": "yarn eslint",
    "lint:build": "yarn eslint:build",
    "lint": "yarn lint:build",
    "lint:q": "yarn eslint:q",
    "eslint": "eslint \"./**/*\" && echo \"no linting errors\"",
    "eslint:build": "eslint -c build.eslintrc.js \"./**/*\" && echo \"no linting errors\"",
    "eslint:q": "eslint --quiet \"./**/*\" && echo \"no linting errors\"",
    "migrate": "knex --knexfile knexfile.ts migrate:latest",
    "migrate:es": "ts-node  src/tasks/elasticsearch/elasticsearch.ts migrate",
    "migrate:create": "bash -c 'knex migrate:make ${0} --migrations-directory src/migrations'",
    "migrate:rollback": "knex migrate:rollback",
    "migrate:unlock": "knex migrate:unlock",
    "db:create": "ts-node src/tasks/database.ts create",
    "db:drop": "ts-node src/tasks/database.ts drop",
    "db:reset": "ts-node src/tasks/database.ts drop && yarn db:create && yarn migrate && yarn seed",
    "db:truncate": "ts-node src/tasks/database.ts truncate",
    "seed": "knex --knexfile knexfile.ts seed:run",
    "rq": "> application.log && yarn docker && yarn db:reset && yarn dev+jobs",
    "es:reset": "yarn es:apply:migrations",
    "es:apply:migrations": "ts-node src/tasks/elasticsearch/elasticsearch.ts migrate",
    "es:apply:templates": "ts-node src/tasks/elasticsearch/elasticsearch.ts apply ",
    "es:remove:template:event": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove template event_template",
    "es:remove:template:caseworklog": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove template case_worklog_template",
    "es:remove:template:case": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove template case_template",
    "es:remove:caseworklogs": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove index cassini_case_worklogs_test",
    "es:remove:cases": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove index cassini_cases_test",
    "es:remove:events": "ts-node src/tasks/elasticsearch/elasticsearch.ts remove index cassini_events_test",
    "es:seed:caseworklogs": "ts-node src/tasks/elasticsearch/elasticsearch.ts seed cassini_case_worklogs_test \"./seeds/es/case_worklogs.json\"",
    "es:seed:cases": "ts-node src/tasks/elasticsearch/elasticsearch.ts seed cassini_cases_test \"./seeds/es/cases.json\"",
    "es:seed:events": "ts-node src/tasks/elasticsearch/elasticsearch.ts seed cassini_events_test \"./seeds/es/events.json\"",
    "archer:migrate": "node scripts/archerHistoricalDataImport.mjs $CSV_PATH",
    "archer:migrate:worklogs": "node scripts/archerCaseWorklogsHistoricalDataImport.mjs $CSV_PATH",
    "projektor": "projektor-publish",
    "clean-results": ""
  },
  "dependencies": {
    "@carnivore/types": "2.3.0",
    "@cfc/chee-types": "0.0.2-SNAPSHOT-87.0",
    "@cassini/webapp-shared": "0.23.1-SNAPSHOT-506.0",
    "@elastic/elasticsearch": "^7.17.0",
    "@slack/web-api": "^6.6.0",
    "@types/cookie": "0.5.1",
    "@types/cookie-parser": "1.4.3",
    "@types/ws": "8.5.4",
    "ajv": "^6.12.3",
    "ajv-formats": "^2.1.1",
    "amqplib": "^0.7.1",
    "async-mutex": "^0.2.6",
    "aws-sdk": "2.1354.0",
    "body-parser": "^1.18.3",
    "bull": "^4.0.0",
    "cassini-core": "5.5.0",
    "chance": "^1.0.18",
    "compression": "1.7.4",
    "config": "^3.3.2",
    "connect-redis": "^4.0.4",
    "cookie": "0.5.0",
    "cookie-parser": "1.4.6",
    "csv-parse": "^4.16.0",
    "csv-stringify": "^5.3.3",
    "date-fns": "^2.3.0",
    "db-errors": "^0.2.3",
    "diff": "^4.0.1",
    "ejs": "3.1.7",
    "exceljs": "^4.3.0",
    "express": "^4.16.3",
    "express-session": "^1.15.6",
    "express-sslify": "^1.2.0",
    "flatbuffers": "^1.12.0",
    "helmet": "^3.21.2",
    "http-proxy-middleware": "2.0.1",
    "https-proxy-agent": "5.0.1",
    "ioredis": "^4.10.0",
    "jsondiffpatch": "^0.4.1",
    "jwt-js-decode": "^1.4.1",
    "kafka-node": "5.0.0",
    "knex": "^0.95.6",
    "knex-db-manager": "^0.7.0",
    "limiter": "^1.1.5",
    "lodash": "^4.17.21",
    "lru-cache": "10.0.0",
    "markdown-it": "13.0.1",
    "mime": "^2.5.2",
    "moment": "^2.29.4",
    "multer": "^1.4.5-lts.1",
    "node-fetch": "^2.6.1",
    "nodemailer": "^6.6.1",
    "object-hash": "^1.3.1",
    "object-mapper": "^6.2.0",
    "objection": "^3.0.0",
    "octokit": "^1.0.5",
    "passport": "^0.6.0",
    "passport-local": "^1.0.0",
    "passport-strategy": "^1.0.0",
    "pg": "^8.6.0",
    "pg-escape": "^0.2.0",
    "puppeteer": "^5.5.0",
    "redis": "3.1.2",
    "role-acl": "^4.4.0",
    "sanitize-html": "^2.0.0-beta",
    "superstruct": "^0.8.3",
    "tldts": "6.0.9",
    "tslib": "2.3.1",
    "uuid": "^3.3.2",
    "weird-auth": "^2.0.2",
    "winston": "^3.1.0",
    "ws": "8.12.1",
    "xlsx": "https://cdn.sheetjs.com/xlsx-0.19.3/xlsx-0.19.3.tgz",
    "yaml": "^2.0.0"
  },
  "devDependencies": {
    "@elastic/elasticsearch-mock": "1.0.0",
    "@types/amqplib": "^0.5.15",
    "@types/bull": "^3.5.11",
    "@types/chai": "^4.1.7",
    "@types/chance": "^1.0.1",
    "@types/compression": "1.7.2",
    "@types/config": "^0.0.34",
    "@types/connect-redis": "^0.0.10",
    "@types/csv-stringify": "^1.4.3",
    "@types/diff": "^4.0.2",
    "@types/ejs": "^2.6.3",
    "@types/exceljs": "^1.3.0",
    "@types/express": "^4.16.1",
    "@types/express-session": "^1.15.11",
    "@types/flatbuffers": "^1.10.0",
    "@types/glob": "^7.1.1",
    "@types/helmet": "^0.0.45",
    "@types/http-proxy-middleware": "^0.19.3",
    "@types/ioredis": "^4.0.12",
    "@types/jest": "27.0.0",
    "@types/kafka-node": "3.0.0",
    "@types/knex-db-manager": "^0.5.0",
    "@types/ldapjs": "^1.0.3",
    "@types/lodash": "^4.14.162",
    "@types/markdown-it": "12.2.3",
    "@types/mime": "^2.0.3",
    "@types/mocha": "^8.2.2",
    "@types/multer": "^1.4.4",
    "@types/node": "20.4.2",
    "@types/node-fetch": "^2.5.7",
    "@types/passport": "^1.0.0",
    "@types/passport-local": "^1.0.33",
    "@types/passport-strategy": "^0.2.35",
    "@types/puppeteer": "^5.4.3",
    "@types/sanitize-html": "^1.20.0",
    "@types/sinon": "^7.5.1",
    "@types/superagent": "^4.1.1",
    "@types/superstruct": "^0.8.2",
    "@types/supertest": "^2.0.7",
    "@types/uuid": "^3.4.4",
    "@typescript-eslint/eslint-plugin": "5.61.0",
    "@typescript-eslint/parser": "5.61.0",
    "chai": "^4.1.2",
    "concurrently": "^3.6.1",
    "eslint": "8.44.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-prettier": "8.8.0",
    "eslint-config-typescript": "3.0.0",
    "eslint-import-resolver-typescript": "3.5.5",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-json": "3.1.0",
    "jest": "29.6.0",
    "jest-junit": "16.0.0",
    "mocha": "^9.2.2",
    "nodemon": "^2.0.7",
    "projektor-publish": "3.10.2",
    "sinon": "^8.1.0",
    "supertest": "^6.1.3",
    "ts-jest": "29.1.1",
    "ts-node": "^10.0.0",
    "typescript": "4.5"
  },
  "engines": {
    "node": ">=16",
    "npm": "please-use-yarn",
    "yarn": ">=1.22"
  },
  "resolutions": {
    "amqplib/**/url-parse": "~1.5.9",
    "**/knex": "^0.95.6",
    "jszip": "^3.8.0"
  },
  "jest-junit": {
    "includeConsoleOutput": "true",
    "outputDirectory": "jestResults",
    "classNameTemplate": "{classname}",
    "usePathForSuiteName": "true"
  }
}
